{"components/common/paginator":"<div class=\"pagination\">\n    <ul class=\"pagination-list\">\n        {{#if previous}}\n            <li class=\"pagination-item pagination-item--previous\">\n                <a class=\"pagination-link\" href=\"{{previous}}\" {{#unless reload}}data-faceted-search-facet{{/unless}}>\n                    <i class=\"icon\" aria-hidden=\"true\">\n                        <svg>\n                            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-chevron-left\"></use>\n                        </svg>\n                    </i>\n                    {{lang 'common.previous'}}\n                </a>\n            </li>\n        {{/if}}\n        {{#each links}}\n            {{#if this.number '==' ../current}}\n                <li class=\"pagination-item pagination-item--current\">\n                    <a class=\"pagination-link\" href=\"{{this.url}}\" {{#unless reload}}data-faceted-search-facet{{/unless}}>{{this.number}}</a>\n                </li>\n            {{else}}\n                <li class=\"pagination-item\">\n                    <a class=\"pagination-link\" href=\"{{this.url}}\" {{#unless reload}}data-faceted-search-facet{{/unless}}>{{this.number}}</a>\n                </li>\n            {{/if}}\n        {{/each}}\n\n        {{#if next}}\n            <li class=\"pagination-item pagination-item--next\">\n                <a class=\"pagination-link\" href=\"{{next}}\" {{#unless reload}}data-faceted-search-facet{{/unless}}>\n                    {{lang 'common.next'}}\n                    <i class=\"icon\" aria-hidden=\"true\">\n                        <svg>\n                            <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-chevron-right\"></use>\n                        </svg>\n                    </i>\n                </a>\n            </li>\n        {{/if}}\n    </ul>\n</div>\n","components/products/description-tabs":"\r\n<div class=\"container collapse\">\r\n  \r\n      \r\n         {{#eachIndex (split product.description '<!-- split -->')}}\r\n {{#if index '==' '0' }} \r\n {{#lengthEqual item 20}}\r\n          {{else}}\r\n          {{#lengthEqual item 80}}\r\n          {{else}}\r\n          \r\n    <details>\r\n         <summary><a><i class=\"fas fa-clipboard\"></i>Special Features</a></summary>\r\n    <div class=\"details-wrapper\">\r\n      <div class=\"details-styling\">       \r\n {{{item}}}\r\n\r\n</div>\r\n    </div>\r\n  </details>\r\n    {{/lengthEqual}}\r\n    {{/lengthEqual}}\r\n {{/if}}\r\n    \r\n     {{/eachIndex}}\r\n      \r\n  \r\n        {{#eachIndex (split product.description '<!-- split -->')}}\r\n {{#if index '==' '1' }} \r\n          {{#lengthEqual item 24}}\r\n          \r\n          {{else}}\r\n          {{#lengthEqual item 23}}\r\n          {{else}}\r\n          {{#lengthEqual item 22}}\r\n\r\n    {{else}}\r\n<details>\r\n    <summary><a><i class=\"fas fa-list-ul\"></i>Specifications</a></summary>\r\n    <div class=\"details-wrapper\">\r\n      <div class=\"details-styling\">        \r\n {{{item}}}\r\n </div>\r\n    </div>\r\n  </details>\r\n    {{/lengthEqual}}\r\n    {{/lengthEqual}}\r\n    {{/lengthEqual}}\r\n {{/if}}\r\n     {{/eachIndex}}\r\n     \r\n  <details>\r\n    <summary><a><i class=\"far fa-star\"></i>Reviews</a></summary>\r\n    <div class=\"details-wrapper\">   \r\n      <div class=\"details-styling\">        \r\n      <div class=\"review-stamped\">        \r\n        <div id=\"stamped-main-widget\" data-widget-style=\"standard\" data-product-id=\"{{ product.id }}\" data-title=\"Customer Reviews\" data-style-color-title=\"#2f2f2b\" data-style-color-text=\"#2f2f2b\" data-style-color-link=\"#2f2f2b\" data-fill-empty=\"true\" data-random=\"? string:Customer Reviews ?\" data-product-image=\"true\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </details>\r\n    \r\n    {{#each product.custom_fields}}\r\n    {{#if name '===' 'Rebate IDs'}}\r\n    {{#if value '===' '0'}}\r\n    {{else}}\r\n    <details id=\"#rebate\" rebate-idd=''>\r\n    <summary><a><i class=\"fas fa-tag\"></i>Rebates</a></summary>\r\n    <div class=\"details-wrapper\" >   \r\n         <div class=\"details-styling\">\r\n             <!--<div id=\"bc-rebate\">-->\r\n             <!--    <table id=\"rebate-table\" class=\"display\" width=\"100%\"></table>-->\r\n             <!--</div>-->\r\n             <div id=\"myDIV\">\r\n                <h3></h3>\r\n             </div>\r\n           \r\n         </div>\r\n    </div>\r\n</details>  \r\n\r\n    \r\n{{/if}}\r\n{{/if}}\r\n{{/each}}\r\n   \r\n         \r\n       {{#eachIndex (split product.description '<!-- split -->')}}\r\n {{#if index '==' '4' }}\r\n    {{#lengthEqual item 18}}\r\n    \r\n    {{else}}\r\n    {{#lengthEqual item 16}}\r\n    {{else}}\r\n   \r\n    <details>\r\n    <summary><a><i class=\"far fa-file-text-o\"></i>Documents</a></summary>\r\n    <div class=\"details-wrapper\">   \r\n      <div class=\"details-styling\">     \r\n {{{item}}}\r\n </div>\r\n    </div>\r\n  </details>\r\n\r\n     {{/lengthEqual}}\r\n     {{/lengthEqual}}\r\n {{/if}}\r\n     {{/eachIndex}}\r\n</div>\r\n\r\n<script>\r\ntry{\r\nmiscPolyfillsForIE();\r\n\r\n/*\r\nlet accordion = new Collapse(element, { option: value}).init();\r\n\r\n  Options - { option: defaultValue }\r\n    accordion: false,\r\n    initClass: 'collapse-init',\r\n    activeClass: 'panel-active',\r\n    heightClass: 'collapse-reading-height',\r\n\r\n  Methods - accordion.method(panel)\r\n    open(panel)\r\n    close(panel)\r\n    toggle(panel)\r\n    openSinglePanel(panel) [AKA accordion mode]\r\n    openAll()\r\n    closeAll()\r\n\r\n  Events - panel.addEventListener('event')\r\n    openingPanel\r\n    openedPanel\r\n    closingPanel\r\n    closedPanel\r\n*/\r\n\r\nclass Collapse {\r\n  constructor(container, options = {}) {\r\n    let defaults = {\r\n      accordion: false,\r\n      initClass: 'collapse-init',\r\n      activeClass: 'panel-active',\r\n      heightClass: 'collapse-reading-height',\r\n    }\r\n    \r\n    this.settings = Object.assign({}, defaults, options);\r\n   \r\n    this._container = container;\r\n    this._panels = container.querySelectorAll(\"details\");\r\n    this.events = {\r\n      openingPanel: new CustomEvent('openingPanel'),\r\n      openedPanel: new CustomEvent('openedPanel'),\r\n      closingPanel: new CustomEvent('closingPanel'),\r\n      closedPanel: new CustomEvent('closedPanel'),\r\n    };\r\n  }  \r\n  // Sets height of panel content\r\n  _setPanelHeight( panel ) {\r\n    let contents = panel.querySelector(\"summary + *\");\r\n    contents.style.height = contents.scrollHeight + \"px\";\r\n  }\r\n  // Removes height of panel content\r\n  _removePanelHeight( panel ) {\r\n    let contents = panel.querySelector(\"summary + *\"); \r\n    contents.style.height = null;\r\n  }\r\n  //=== Open panel\r\n  open(panel) {\r\n    panel.dispatchEvent( this.events.openingPanel );\r\n    panel.open = true;\r\n  }\r\n  // Add height and active class, this triggers opening animation\r\n  _afterOpen(panel) {\r\n    this._setPanelHeight(panel);\r\n    panel.classList.add(this.settings.activeClass);\r\n  }\r\n  // Remove height on animation end since it's no longer needed\r\n  _endOpen(panel) {\r\n    panel.dispatchEvent( this.events.openedPanel );\r\n    this._removePanelHeight(panel);\r\n  }\r\n  //=== Close panel, not toggling the actual [open] attr!\r\n  close(panel) {\r\n    panel.dispatchEvent( this.events.closingPanel );\r\n    this._afterClose(panel);\r\n  }\r\n  // Set height, wait a beat, then remove height to trigger closing animation\r\n  _afterClose(panel) {\r\n    this._setPanelHeight(panel);\r\n    setTimeout(() => {\r\n      panel.classList.remove(this.settings.activeClass);\r\n      this._removePanelHeight(panel);\r\n    }, 100); //help, this is buggy and hacky\r\n  }\r\n\r\n  // Actually closes panel once animation finishes\r\n  _endClose(panel) {\r\n    panel.dispatchEvent( this.events.closedPanel );\r\n    \r\n    panel.open = false;\r\n  }\r\n  \r\n  //=== Toggles panel... just in case anyone needs this\r\n  toggle(panel) {\r\n    panel.open ? this.close(panel) : this.open(panel);\r\n  }\r\n\r\n  //=== Accordion closes all panels except the current passed panel \r\n  openSinglePanel(panel) {\r\n    this._panels.forEach((element) => {\r\n      if (panel == element && !panel.open) {\r\n        this.open(element);\r\n      } else {\r\n        this.close(element);\r\n      }\r\n    });\r\n  }\r\n  \r\n  //=== Opens all panels just because\r\n  openAll() {\r\n    this._panels.forEach((element) => {\r\n      this.open(element);\r\n    });\r\n  }\r\n  \r\n  //=== Closes all panels just in case\r\n  closeAll() {\r\n    this._panels.forEach((element) => {\r\n      this.close(element);\r\n    });\r\n  }\r\n  \r\n  // Now put it all together\r\n  _attachEvents() {\r\n    this._panels.forEach(panel => {\r\n      let toggler = panel.querySelector(\"summary\");\r\n      let contents = panel.querySelector(\"summary + *\");\r\n\r\n      // On panel open\r\n      panel.addEventListener(\"toggle\", e => {\r\n        let isReadingHeight = panel.classList.contains(this.settings.heightClass);\r\n\r\n        if (panel.open && !isReadingHeight) {\r\n          this._afterOpen(panel);\r\n        }\r\n      });\r\n\r\n      toggler.addEventListener(\"click\", e => {\r\n        // If accordion, stop default toggle behavior\r\n        if (this.settings.accordion) {\r\n          this.openSinglePanel(panel);\r\n          e.preventDefault();\r\n        }\r\n        \r\n        // On attempting close, stop default close behavior to substitute our own\r\n        else if (panel.open) {\r\n          this.close(panel);\r\n          e.preventDefault();\r\n        }\r\n        \r\n        // On open, proceed as normal (see toggle listener above)\r\n      });\r\n      \r\n      /*\r\n        transitionend fires once for each animated property, \r\n        but we want it to fire once for each click. \r\n        So let's make sure to watch only a single property\r\n        Note this makes complex animations with multiple transition-durations impossible\r\n        Sorry\r\n      */\r\n      let propToWatch = '';\r\n          \r\n      // On panel finishing open/close animation\r\n      contents.addEventListener(\"transitionend\", (e) => {\r\n        // Ignore transitions from child elements\r\n        if(e.target !== contents) {\r\n          return;\r\n        }\r\n          \r\n        // Set property to watch on first fire\r\n        if ( !propToWatch ) propToWatch = e.propertyName;\r\n        \r\n        // If watched property matches currently animating property\r\n        if ( e.propertyName == propToWatch ) {\r\n          let wasOpened = panel.classList.contains(this.settings.activeClass);\r\n          wasOpened ? this._endOpen(panel) : this._endClose(panel);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  init() {\r\n    // Attach functionality\r\n    this._attachEvents();\r\n    \r\n    // If accordion, open the first panel\r\n    // if (this.settings.accordion) {\r\n    //   this.openSinglePanel(this._panels[0]);\r\n    // }\r\n    if(window.location.href.indexOf('#') > 0 ){\r\n      this.openSinglePanel(this._panels[3]);\r\n      var el = document.getElementById('#rebate');\r\n      el.scrollIntoView({block: \"start\"});\r\n     \r\n\r\n\r\n    }else{\r\n      this.openSinglePanel(this._panels[0]);\r\n    }\r\n    \r\n    // For styling purposes\r\n    this._container.classList.add(this.settings.initClass);\r\n    \r\n    return this;\r\n  }\r\n}\r\n\r\nlet makeMePretty = document.querySelector(\".collapse\");\r\nlet accordion = new Collapse(makeMePretty, { accordion: true }).init(); \r\n\r\n// Toggle accordion behavior\r\ndocument.querySelector(\"#accordion-toggle\")\r\n  .addEventListener(\"change\", function() {\r\n    this.checked ? \r\n      accordion.settings.accordion = false : \r\n      accordion.settings.accordion = true ;\r\n});\r\n\r\n// hoisthoistupwego I'm stuck on a machine with IE11\r\nfunction miscPolyfillsForIE() {  \r\n  // NodeList.forEach() polyfill\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach#Browser_Compatibility\r\n  if (window.NodeList && !NodeList.prototype.forEach) {\r\n    NodeList.prototype.forEach = Array.prototype.forEach;\r\n  }\r\n\r\n  // Object.assign() polyfill \r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n  \"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){\"use strict\";if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),r=1;r<arguments.length;r++){var o=arguments[r];if(null!=o)for(var c in o)Object.prototype.hasOwnProperty.call(o,c)&&(n[c]=o[c])}return n},writable:!0,configurable:!0});\r\n  \r\n  // CustomEvent polyfill\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  !function(){if(\"function\"==typeof window.CustomEvent)return!1;function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}t.prototype=window.Event.prototype,window.CustomEvent=t}();\r\n}\r\n}catch(err){console.log(\"accordionERROR\");}\r\n</script>\r\n\r\n   {{#all settings.show_product_reviews theme_settings.show_product_reviews_tabs}}\r\n       <div class=\"tab-content\" id=\"tab-reviews\">\r\n           {{> components/products/reviews reviews=product.reviews product=product urls=urls}}\r\n       </div>\r\n   {{/all}}\r\n</div>\r\n","components/products/ratings":"{{#for 1 5}}\n    {{#if ../this.rating '>=' $index}}\n        <span class=\"icon icon--ratingFull\">\n            <svg>\n                <use xlink:href=\"#icon-star\" />\n            </svg>\n        </span>\n    {{else}}\n        <span class=\"icon icon--ratingEmpty\">\n            <svg>\n                <use xlink:href=\"#icon-star\" />\n            </svg>\n        </span>\n    {{/if}}\n{{/for}}\n","components/products/reviews":"{{#if reviews.total}}\n<section class=\"toggle productReviews\" id=\"product-reviews\" data-product-reviews>\n    <h4 class=\"toggle-title\">\n        {{lang 'products.reviews.header' total=reviews.total}}\n        {{#if theme_settings.show_product_reviews_tabs '!==' true}}\n            <a class=\"toggleLink is-open\" data-collapsible href=\"#productReviews-content\">\n                <span class=\"toggleLink-text toggleLink-text--on\">\n                    {{lang 'products.reviews.hide'}}\n                </span>\n                <span class=\"toggleLink-text toggleLink-text--off\">\n                    {{lang 'products.reviews.show'}}\n                </span>\n            </a>\n        {{/if}}\n    </h4>\n    <div class=\"toggle-content is-open\" id=\"productReviews-content\" aria-hidden=\"false\">\n        <ul class=\"productReviews-list\" id=\"productReviews-list\">\n            {{#each reviews.list}}\n            <li class=\"productReview\">\n                <article itemprop=\"review\" itemscope itemtype=\"http://schema.org/Review\">\n                    <header>\n                        <span class=\"productReview-rating rating--small\" itemprop=\"reviewRating\" itemscope itemtype=\"http://schema.org/Rating\">\n                            {{> components/products/ratings rating=rating}}\n                            <span class=\"productReview-ratingNumber\" itemprop=\"ratingValue\">{{ rating }}</span>\n                        </span>\n                        <h5 itemprop=\"name\" class=\"productReview-title\">{{ title }}</h5>\n                        {{#if name}}\n                            <meta itemprop=\"author\" content=\"{{name}}\">\n                            <p class=\"productReview-author\">\n                                {{lang 'products.reviews.post_on_by' date=date name=name }}\n                            </p>\n                        {{else}}\n                            <p class=\"productReview-author\">\n                                {{lang 'products.reviews.post_on_by' date=date name=(lang 'products.reviews.anonymous_poster')}}\n                            </p>\n                        {{/if}}\n                    </header>\n                    <p itemprop=\"reviewBody\" class=\"productReview-body\">{{nl2br text}}</p>\n                </article>\n            </li>\n            {{/each}}\n        </ul>\n        {{> components/common/paginator pagination.reviews}}\n    </div>\n</section>\n{{/if}}\n"}
